{"version":3,"sources":["containers/addNewTaskPopup/index.js","containers/addNewTask/index.js"],"names":["AddNewTaskPopup","_ref","addTodoTaskHandler","toggleNewTaskPopup","_useState","useState","_useState2","Object","slicedToArray","myTask","setMyTask","inputRef","useRef","onSaveTask","useEffect","current","focus","react_default","a","createElement","className","type","onChange","e","target","value","placeholder","ref","onKeyPress","key","onClick","AddNewTask","isNewTaskPopupVisible","setNewTaskPopupVisiblity","react","addNewTaskPopup"],"mappings":"qKAwCeA,eApCS,SAAAC,GAAgD,IAA7CC,EAA6CD,EAA7CC,mBAAoBC,EAAyBF,EAAzBE,mBAAyBC,EAC1CC,mBAAS,IADiCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/DK,EAD+DH,EAAA,GACvDI,EADuDJ,EAAA,GAEhEK,EAAWC,mBAEXC,EAAa,WACjBX,EAAmBO,GACnBN,KAOF,OAJAW,oBAAU,WACRH,EAASI,QAAQC,UAIjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIb,EAAUa,EAAEC,OAAOC,QAClCA,MAAOhB,EACPiB,YAAY,WACZC,IAAKhB,EACLiB,WAAY,SAAAL,GACI,UAAVA,EAAEM,KACJhB,OAINI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWU,QAASjB,GAAnC,YCJOkB,UAtBI,SAAA9B,GAA4B,IAAzBC,EAAyBD,EAAzBC,mBAAyBE,EACaC,oBAAS,GADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtC4B,EADsC1B,EAAA,GACf2B,EADe3B,EAAA,GAEvCH,EAAqB,kBACzB8B,GAA0BD,IAC5B,OACEf,EAAAC,EAAAC,cAACe,EAAA,SAAD,KACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaU,QAAS3B,GACnCc,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,KADF,kBAGCY,GACCf,EAAAC,EAAAC,cAACe,EAAA,SAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAD,CACEjC,mBAAoBA,EACpBC,mBAAoBA,IAEtBc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBU,QAAS3B","file":"static/js/3.8a4e44c5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport \"./AddNewTaskPopup.css\";\n\nconst AddNewTaskPopup = ({ addTodoTaskHandler, toggleNewTaskPopup }) => {\n  const [myTask, setMyTask] = useState(\"\");\n  const inputRef = useRef();\n\n  const onSaveTask = () => {\n    addTodoTaskHandler(myTask);\n    toggleNewTaskPopup();\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  return (\n    <div className=\"AddNewTaskPopup\">\n      <div className=\"inputWrapper\">\n        <input\n          type=\"text\"\n          onChange={e => setMyTask(e.target.value)}\n          value={myTask}\n          placeholder=\"Add task\"\n          ref={inputRef}\n          onKeyPress={e => {\n            if (e.key === \"Enter\") {\n              onSaveTask();\n            }\n          }}\n        />\n        <div className=\"saveTask\" onClick={onSaveTask}>\n          Save\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewTaskPopup;\n","import React, { Fragment, useState } from \"react\";\n\nimport \"./AddNewTask.css\";\n\nimport AddNewTaskPopup from \"../addNewTaskPopup\";\n\nconst AddNewTask = ({ addTodoTaskHandler }) => {\n  const [isNewTaskPopupVisible, setNewTaskPopupVisiblity] = useState(false);\n  const toggleNewTaskPopup = () =>\n    setNewTaskPopupVisiblity(!isNewTaskPopupVisible);\n  return (\n    <Fragment>\n      <div className=\"AddNewTask\" onClick={toggleNewTaskPopup}>\n        <span className=\"icon\">+</span>Add a new task\n      </div>\n      {isNewTaskPopupVisible && (\n        <Fragment>\n          <AddNewTaskPopup\n            addTodoTaskHandler={addTodoTaskHandler}\n            toggleNewTaskPopup={toggleNewTaskPopup}\n          />\n          <div className=\"AddNewTaskOverlay\" onClick={toggleNewTaskPopup} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default AddNewTask;\n"],"sourceRoot":""}