{"version":3,"sources":["containers/todoList/todolistData.js","containers/header/index.js","components/Clock/index.js","index.js"],"names":["todolistData","todolist","id","title","Header","props","react_default","a","createElement","className","Clock","_useState","useState","_useState2","Object","slicedToArray","currentTime","setCurrentTime","time","d","Date","s","getSeconds","m","getMinutes","h","getHours","useEffect","clock","setInterval","clearInterval","TodoList","React","lazy","__webpack_require__","e","then","bind","CompletedList","AddNewTask","rootElement","document","getElementById","ReactDOM","render","todoListData","todoListPayload","setTodoListPayload","_useState3","_useState4","completedTodoList","setCompletedTodoList","console","log","header","components_Clock","react","fallback","payload","completeTodoTaskHandler","_ref2","filteredTodoItem","find","item","_ref","filteredTodoList","filter","removeTodoTaskHandler","concat","toConsumableArray","list","addTodoTaskHandler","value","Math","random"],"mappings":"mPAAeA,EAAA,CACbC,SAAU,CACR,CACEC,GAAI,EACJC,MAAO,wBAET,CACED,GAAI,EACJC,MAAO,sBAET,CACED,GAAI,EACJC,MAAO,2BAET,CACED,GAAI,EACJC,MAAO,4BCPEC,SALA,SAAAC,GAAS,IACdF,EAAUE,EAAVF,MACR,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUN,KCmBnBO,SAtBD,WAAM,IAAAC,EACoBC,mBAAS,IAD7BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACXK,EADWH,EAAA,GACEI,EADFJ,EAAA,GAGZK,EAAO,WACX,IAAIC,EAAI,IAAIC,KACRC,EAAIF,EAAEG,aACNC,EAAIJ,EAAEK,aACNC,EAAIN,EAAEO,WAEVT,EAAeQ,EAAI,IAAMF,EAAI,IAAMF,IAUrC,OAPAM,oBAAU,WACR,IAAMC,EAAQC,YAAYX,EAAM,KAChC,OAAO,WACLY,cAAcF,MAIXtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASO,KCX3Be,SAAWC,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aAC5BC,EAAgBN,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YACjCE,EAAaP,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAyDpC,IAAMG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOtC,EAAAC,EAAAC,cAxDhB,WAAe,IACLP,EAAa4C,EAAb5C,SADKU,EAEiCC,mBAASX,GAF1CY,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENmC,EAFMjC,EAAA,GAEWkC,EAFXlC,EAAA,GAAAmC,EAGqCpC,mBAAS,IAH9CqC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,GAGNE,EAHMD,EAAA,GAGaE,EAHbF,EAAA,GAqCb,OALAtB,oBAAU,WACRyB,QAAQC,IAAIP,GACZM,QAAQC,IAAIH,KAIZ5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQnD,MAAO,aACfG,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACgD,EAAA,SAAD,CAAUC,SAAUnD,EAAAC,EAAAC,cAAA,0BAClBF,EAAAC,EAAAC,cAACuB,EAAD,CACE2B,QAASZ,EACTa,wBAvBsB,SAAAC,GAAY,IAAT1D,EAAS0D,EAAT1D,GAE7B2D,EAAmBf,EAAgBgB,KAAK,SAAAC,GAAI,OAAIA,EAAK7D,KAAOA,KATpC,SAAA8D,GAAY,IAAT9D,EAAS8D,EAAT9D,GAEzB+D,EAAmBnB,EAAgBoB,OAAO,SAAAH,GAAI,OAAIA,EAAK7D,KAAOA,IAEpE6C,EAAmBkB,GAOnBE,CAAsB,CAAEjE,OAGxBiD,EAAoB,GAAAiB,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAKoC,GAAL,CAAwBW,QAkBtCvD,EAAAC,EAAAC,cAAC8B,EAAD,CAAegC,KAAMpB,IACrB5C,EAAAC,EAAAC,cAAC+B,EAAD,CAAYgC,mBA3CO,SAAAC,GACzBzB,EAAkB,GAAAqB,OAAAtD,OAAAuD,EAAA,EAAAvD,CACbgC,GADa,CAEhB,CACE5C,GAAIuE,KAAKC,SACTvE,MAAOqE,aA8CC,MAAShC","file":"static/js/main.b71e9a97.chunk.js","sourcesContent":["export default {\n  todolist: [\n    {\n      id: 1,\n      title: \"Put photo in gym bag\"\n    },\n    {\n      id: 2,\n      title: \"Put cat in the bag\"\n    },\n    {\n      id: 3,\n      title: \"take dog out for a walk\"\n    },\n    {\n      id: 4,\n      title: \"Eat all the chocolates\"\n    }\n  ]\n};\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nconst Header = props => {\n  const { title } = props;\n  return <div className=\"Header\">{title}</div>;\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Clock.css\";\n\nconst Clock = () => {\n  const [currentTime, setCurrentTime] = useState(\"\");\n\n  const time = () => {\n    var d = new Date();\n    var s = d.getSeconds();\n    var m = d.getMinutes();\n    var h = d.getHours();\n    // return currentTime = h + \":\" + m + \":\" + s;\n    setCurrentTime(h + \":\" + m + \":\" + s);\n  };\n\n  useEffect(() => {\n    const clock = setInterval(time, 1000);\n    return () => {\n      clearInterval(clock);\n    };\n  });\n\n  return <div className=\"Clock\">{currentTime}</div>;\n};\n\nexport default Clock;\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport todoListData from \"./containers/todoList/todolistData\";\n\nimport Header from \"./containers/header\";\n// import CompletedList from \"./containers/completedList\";\n// import AddNewTask from \"./containers/addNewTask\";\nimport Clock from \"./components/Clock\";\nimport \"./styles.css\";\n\nconst TodoList = React.lazy(() => import(\"./containers/todoList\"));\nconst CompletedList = React.lazy(() => import(\"./containers/completedList\"));\nconst AddNewTask = React.lazy(() => import(\"./containers/addNewTask\"));\n\nfunction App() {\n  const { todolist } = todoListData;\n  const [todoListPayload, setTodoListPayload] = useState(todolist);\n  const [completedTodoList, setCompletedTodoList] = useState([]);\n\n  const addTodoTaskHandler = value => {\n    setTodoListPayload([\n      ...todoListPayload,\n      {\n        id: Math.random(),\n        title: value\n      }\n    ]);\n  };\n\n  const removeTodoTaskHandler = ({ id }) => {\n    // Remove from the set of todo list\n    const filteredTodoList = todoListPayload.filter(item => item.id !== id);\n\n    setTodoListPayload(filteredTodoList);\n  };\n\n  const completeTodoTaskHandler = ({ id }) => {\n    // Get item to remove\n    let filteredTodoItem = todoListPayload.find(item => item.id === id);\n\n    removeTodoTaskHandler({ id });\n\n    // add in the completed todo list\n    setCompletedTodoList([...completedTodoList, filteredTodoItem]);\n  };\n\n  useEffect(() => {\n    console.log(todoListPayload);\n    console.log(completedTodoList);\n  });\n\n  return (\n    <div className=\"App\">\n      <Header title={\"My Tasks\"} />\n      <Clock />\n      <div className=\"PageLayout\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <TodoList\n            payload={todoListPayload}\n            completeTodoTaskHandler={completeTodoTaskHandler}\n          />\n          <CompletedList list={completedTodoList} />\n          <AddNewTask addTodoTaskHandler={addTodoTaskHandler} />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}